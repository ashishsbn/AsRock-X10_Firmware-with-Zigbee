#!/bin/sh /etc/rc.common

. /lib/config/uci.sh

START=98
USE_PROCD=1
PROG=/usr/sbin/asrock_mqttd

section_enabled() {
	config_get_bool enable  "$1" 'enable'  0
	config_get_bool enabled "$1" 'enabled' 0
	[ $enable -gt 0 ] || [ $enabled -gt 0 ]
}

asrock_mqttd_add_instance() {
	local url="$1"

	procd_open_instance
	procd_set_param command "$PROG"	\
		--url "$url" 
	procd_set_param respawn ${respawn_threshold:-60} ${respawn_timeout:-5} ${respawn_retry:-5}
	procd_close_instance
}

start_instance() {
	local s="$1"
	local ssid
	config_get ssid "$s" ssid
	if [ -z "${ssid}" ]; then
		local boardcfg_ssid="$(boardcfg -g SID)"
		echo "acquire ssid ${boardcfg_ssid}"
		uci_set asrock "$s" ssid ${boardcfg_ssid}
		uci_commit asrock
	fi

	section_enabled "$s" || {
		return 1
	}
	
	local url
	config_get url "$s" url
	echo "url: ${url}"
	asrock_mqttd_add_instance "${url}"
	return
}

start_service() {

	# kill all asrock_mqttd processes
	[ ! -z $(pidof asrock_mqttd) ] && kill -9 $(pidof asrock_mqttd)

	#echo "[$(date)] ########### Starting asrock_mqttd..." > /dev/console
	logger -t warning asrock start
	config_load asrock
	config_foreach start_instance asrock_mqttd
}

service_triggers()
{
	procd_add_reload_trigger asrock
}

