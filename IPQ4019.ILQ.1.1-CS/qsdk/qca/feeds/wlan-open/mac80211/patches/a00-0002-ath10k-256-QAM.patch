--- a/drivers/net/wireless/ath/ath10k/mac.c
+++ b/drivers/net/wireless/ath/ath10k/mac.c
@@ -2333,8 +2333,11 @@ static void ath10k_peer_assoc_h_vht(stru
 
 	arg->peer_flags |= ar->wmi.peer_flags->vht;
 
-	if (def.chan->band == IEEE80211_BAND_2GHZ)
+	if (def.chan->band == IEEE80211_BAND_2GHZ) {
 		arg->peer_flags |= ar->wmi.peer_flags->vht_2g;
+		arg->peer_flags |= (ar->wmi.peer_flags->dis_amsdu_req |
+				    ar->wmi.peer_flags->dis_amsdu_resp);
+	}
 
 	arg->peer_vht_caps = vht_cap->cap;
 
--- a/drivers/net/wireless/ath/ath10k/wmi.h
+++ b/drivers/net/wireless/ath/ath10k/wmi.h
@@ -5695,6 +5695,8 @@ struct wmi_peer_flags_map {
 	u32 bw80;
 	u32 vht_2g;
 	u32 pmf;
+	u32 dis_amsdu_req;
+	u32 dis_amsdu_resp;
 };
 
 enum wmi_peer_flags {
@@ -5702,6 +5704,7 @@ enum wmi_peer_flags {
 	WMI_PEER_QOS = 0x00000002,
 	WMI_PEER_NEED_PTK_4_WAY = 0x00000004,
 	WMI_PEER_NEED_GTK_2_WAY = 0x00000010,
+	WMI_PEER_DISABLE_AMSDU_REQ = 0x00000400,
 	WMI_PEER_APSD = 0x00000800,
 	WMI_PEER_HT = 0x00001000,
 	WMI_PEER_40MHZ = 0x00002000,
@@ -5714,6 +5717,7 @@ enum wmi_peer_flags {
 	WMI_PEER_80MHZ = 0x04000000,
 	WMI_PEER_VHT_2G = 0x08000000,
 	WMI_PEER_PMF = 0x10000000,
+	WMI_PEER_DISABLE_AMSDU_RESP = 0x20000000,
 };
 
 enum wmi_10x_peer_flags {
@@ -5721,6 +5725,7 @@ enum wmi_10x_peer_flags {
 	WMI_10X_PEER_QOS = 0x00000002,
 	WMI_10X_PEER_NEED_PTK_4_WAY = 0x00000004,
 	WMI_10X_PEER_NEED_GTK_2_WAY = 0x00000010,
+	WMI_10X_PEER_DISABLE_AMSDU_REQ = 0x00000400,
 	WMI_10X_PEER_APSD = 0x00000800,
 	WMI_10X_PEER_HT = 0x00001000,
 	WMI_10X_PEER_40MHZ = 0x00002000,
@@ -5731,6 +5736,7 @@ enum wmi_10x_peer_flags {
 	WMI_10X_PEER_SPATIAL_MUX = 0x00200000,
 	WMI_10X_PEER_VHT = 0x02000000,
 	WMI_10X_PEER_80MHZ = 0x04000000,
+	WMI_10X_PEER_DISABLE_AMSDU_RESP = 0x20000000,
 };
 
 enum wmi_10_2_peer_flags {
@@ -5738,6 +5744,7 @@ enum wmi_10_2_peer_flags {
 	WMI_10_2_PEER_QOS = 0x00000002,
 	WMI_10_2_PEER_NEED_PTK_4_WAY = 0x00000004,
 	WMI_10_2_PEER_NEED_GTK_2_WAY = 0x00000010,
+	WMI_10_2_PEER_DISABLE_AMSDU_REQ = 0x00000400,
 	WMI_10_2_PEER_APSD = 0x00000800,
 	WMI_10_2_PEER_HT = 0x00001000,
 	WMI_10_2_PEER_40MHZ = 0x00002000,
@@ -5750,8 +5757,31 @@ enum wmi_10_2_peer_flags {
 	WMI_10_2_PEER_80MHZ = 0x04000000,
 	WMI_10_2_PEER_VHT_2G = 0x08000000,
 	WMI_10_2_PEER_PMF = 0x10000000,
+	WMI_10_2_PEER_DISABLE_AMSDU_RESP = 0x20000000,
 };
 
+enum wmi_10_4_peer_flags {
+	WMI_10_4_PEER_AUTH = 0x00000001,
+	WMI_10_4_PEER_QOS = 0x00000002,
+	WMI_10_4_PEER_NEED_PTK_4_WAY = 0x00000004,
+	WMI_10_4_PEER_NEED_GTK_2_WAY = 0x00000010,
+	WMI_10_4_PEER_DISABLE_AMSDU_REQ = 0x00000400,
+	WMI_10_4_PEER_APSD = 0x00000800,
+	WMI_10_4_PEER_HT = 0x00001000,
+	WMI_10_4_PEER_40MHZ = 0x00002000,
+	WMI_10_4_PEER_STBC = 0x00008000,
+	WMI_10_4_PEER_LDPC = 0x00010000,
+	WMI_10_4_PEER_DYN_MIMOPS = 0x00020000,
+	WMI_10_4_PEER_STATIC_MIMOPS = 0x00040000,
+	WMI_10_4_PEER_SPATIAL_MUX = 0x00200000,
+	WMI_10_4_PEER_VHT = 0x02000000,
+	WMI_10_4_PEER_80MHZ = 0x04000000,
+	WMI_10_4_PEER_VHT_2G = 0x08000000,
+	WMI_10_4_PEER_PMF = 0x10000000,
+	WMI_10_4_PEER_DISABLE_AMSDU_RESP = 0x40000000,
+};
+
+
 /*
  * Peer rate capabilities.
  *
--- a/drivers/net/wireless/ath/ath10k/wmi.c
+++ b/drivers/net/wireless/ath/ath10k/wmi.c
@@ -1563,6 +1563,8 @@ static const struct wmi_peer_flags_map w
 	.bw80 = WMI_PEER_80MHZ,
 	.vht_2g = WMI_PEER_VHT_2G,
 	.pmf = WMI_PEER_PMF,
+	.dis_amsdu_req = WMI_PEER_DISABLE_AMSDU_REQ,
+	.dis_amsdu_resp = WMI_PEER_DISABLE_AMSDU_RESP,
 };
 
 static const struct wmi_peer_flags_map wmi_10x_peer_flags_map = {
@@ -1580,6 +1582,8 @@ static const struct wmi_peer_flags_map w
 	.spatial_mux = WMI_10X_PEER_SPATIAL_MUX,
 	.vht = WMI_10X_PEER_VHT,
 	.bw80 = WMI_10X_PEER_80MHZ,
+	.dis_amsdu_req = WMI_10X_PEER_DISABLE_AMSDU_REQ,
+	.dis_amsdu_resp = WMI_10X_PEER_DISABLE_AMSDU_RESP,
 };
 
 static const struct wmi_peer_flags_map wmi_10_2_peer_flags_map = {
@@ -1599,6 +1603,29 @@ static const struct wmi_peer_flags_map w
 	.bw80 = WMI_10_2_PEER_80MHZ,
 	.vht_2g = WMI_10_2_PEER_VHT_2G,
 	.pmf = WMI_10_2_PEER_PMF,
+	.dis_amsdu_req = WMI_10_2_PEER_DISABLE_AMSDU_REQ,
+	.dis_amsdu_resp = WMI_10_2_PEER_DISABLE_AMSDU_RESP,
+};
+
+static const struct wmi_peer_flags_map wmi_10_4_peer_flags_map = {
+	.auth = WMI_10_4_PEER_AUTH,
+	.qos = WMI_10_4_PEER_QOS,
+	.need_ptk_4_way = WMI_10_4_PEER_NEED_PTK_4_WAY,
+	.need_gtk_2_way = WMI_10_4_PEER_NEED_GTK_2_WAY,
+	.apsd = WMI_10_4_PEER_APSD,
+	.ht = WMI_10_4_PEER_HT,
+	.bw40 = WMI_10_4_PEER_40MHZ,
+	.stbc = WMI_10_4_PEER_STBC,
+	.ldbc = WMI_10_4_PEER_LDPC,
+	.dyn_mimops = WMI_10_4_PEER_DYN_MIMOPS,
+	.static_mimops = WMI_10_4_PEER_STATIC_MIMOPS,
+	.spatial_mux = WMI_10_4_PEER_SPATIAL_MUX,
+	.vht = WMI_10_4_PEER_VHT,
+	.bw80 = WMI_10_4_PEER_80MHZ,
+	.vht_2g = WMI_10_4_PEER_VHT_2G,
+	.pmf = WMI_10_4_PEER_PMF,
+	.dis_amsdu_req = WMI_10_4_PEER_DISABLE_AMSDU_REQ,
+	.dis_amsdu_resp = WMI_10_4_PEER_DISABLE_AMSDU_RESP,
 };
 
 void ath10k_wmi_put_wmi_channel(struct wmi_channel *ch,
@@ -7687,7 +7714,7 @@ int ath10k_wmi_attach(struct ath10k *ar)
 		ar->wmi.cmd = &wmi_10_4_cmd_map;
 		ar->wmi.vdev_param = &wmi_10_4_vdev_param_map;
 		ar->wmi.pdev_param = &wmi_10_4_pdev_param_map;
-		ar->wmi.peer_flags = &wmi_10_2_peer_flags_map;
+		ar->wmi.peer_flags = &wmi_10_4_peer_flags_map;
 		break;
 	case ATH10K_FW_WMI_OP_VERSION_10_2_4:
 		ar->wmi.cmd = &wmi_10_2_4_cmd_map;
--- a/drivers/net/wireless/ath/ath10k/wmi-tlv.c
+++ b/drivers/net/wireless/ath/ath10k/wmi-tlv.c
@@ -3501,6 +3501,8 @@ static const struct wmi_peer_flags_map w
 	.vht = WMI_TLV_PEER_VHT,
 	.bw80 = WMI_TLV_PEER_80MHZ,
 	.pmf = WMI_TLV_PEER_PMF,
+	.dis_amsdu_req = WMI_TLV_PEER_DISABLE_AMSDU_REQ,
+	.dis_amsdu_resp = WMI_TLV_PEER_DISABLE_AMSDU_RESP,
 };
 
 /************/
--- a/drivers/net/wireless/ath/ath10k/wmi-tlv.h
+++ b/drivers/net/wireless/ath/ath10k/wmi-tlv.h
@@ -532,6 +532,7 @@ enum wmi_tlv_peer_flags {
 	WMI_TLV_PEER_QOS = 0x00000002,
 	WMI_TLV_PEER_NEED_PTK_4_WAY = 0x00000004,
 	WMI_TLV_PEER_NEED_GTK_2_WAY = 0x00000010,
+	WMI_TLV_PEER_DISABLE_AMSDU_REQ = 0x00000400,
 	WMI_TLV_PEER_APSD = 0x00000800,
 	WMI_TLV_PEER_HT = 0x00001000,
 	WMI_TLV_PEER_40MHZ = 0x00002000,
@@ -543,6 +544,7 @@ enum wmi_tlv_peer_flags {
 	WMI_TLV_PEER_VHT = 0x02000000,
 	WMI_TLV_PEER_80MHZ = 0x04000000,
 	WMI_TLV_PEER_PMF = 0x08000000,
+	WMI_TLV_PEER_DISABLE_AMSDU_RESP = 0x20000000,
 };
 
 enum wmi_tlv_tag {
